// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int              @id @default(autoincrement())
  firstName                 String
  lastName                 String
  email                String           @unique
  password             String
  profile_preferences  Json?
  created_at           DateTime         @default(now())
  updated_at           DateTime         @updatedAt
  studyGroups          StudyGroup[]     @relation("UserStudyGroups")
  createdStudyGroups   StudyGroup[]     @relation("CreatedStudyGroups")
  matches              Match[]
  messages             Message[]
  notifications        Notification[]
}

model StudyGroup {
  id             Int              @id @default(autoincrement())
  name           String
  subject        String
  description    String?
  created_by     Int
  created_at     DateTime         @default(now())
  creator         User             @relation("CreatedStudyGroups", fields: [created_by], references: [id])
  users           User[]           @relation("UserStudyGroups")
  matches        Match[]
  messages       Message[]
}

model Match {
  id              Int         @id @default(autoincrement())
  user_id         Int
  study_group_id  Int
  matched_at      DateTime    @default(now())

  user            User        @relation(fields: [user_id], references: [id])
  studyGroup      StudyGroup  @relation(fields: [study_group_id], references: [id])
}

model Message {
  id              Int         @id @default(autoincrement())
  study_group_id  Int
  user_id         Int
  content         String
  sent_at         DateTime    @default(now())

  studyGroup      StudyGroup  @relation(fields: [study_group_id], references: [id])
  user            User        @relation(fields: [user_id], references: [id])
}

model Notification {
  id              Int         @id @default(autoincrement())
  user_id         Int
  type            String
  message         String
  read            Boolean     @default(false)
  created_at      DateTime    @default(now())

  user            User        @relation(fields: [user_id], references: [id])
}